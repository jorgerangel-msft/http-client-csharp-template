// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading.Tasks;

namespace SimplePost
{
    public partial class SimplePostClient
    {
        private readonly Uri _endpoint;

        protected SimplePostClient()
        {
        }

        public SimplePostClient(Uri endpoint) : this(endpoint, new SimplePostClientOptions())
        {
        }

        public SimplePostClient(Uri endpoint, SimplePostClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            options ??= new SimplePostClientOptions();

            _endpoint = endpoint;
            Pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>());
        }

        public ClientPipeline Pipeline { get; }

        public virtual ClientResult IncrementCount(int addend, RequestOptions options)
        {
            using PipelineMessage message = CreateIncrementCountRequest(addend, options);
            return ClientResult.FromResponse(Pipeline.ProcessMessage(message, options));
        }

        public virtual async Task<ClientResult> IncrementCountAsync(int addend, RequestOptions options)
        {
            using PipelineMessage message = CreateIncrementCountRequest(addend, options);
            return ClientResult.FromResponse(await Pipeline.ProcessMessageAsync(message, options).ConfigureAwait(false));
        }

        public virtual ClientResult<int> IncrementCount(int addend)
        {
            ClientResult result = IncrementCount(addend, null);
            return ClientResult.FromValue(result.GetRawResponse().Content.ToObjectFromJson<int>(), result.GetRawResponse());
        }

        public virtual async Task<ClientResult<int>> IncrementCountAsync(int addend)
        {
            ClientResult result = await IncrementCountAsync(addend, null).ConfigureAwait(false);
            return ClientResult.FromValue(result.GetRawResponse().Content.ToObjectFromJson<int>(), result.GetRawResponse());
        }
    }
}
